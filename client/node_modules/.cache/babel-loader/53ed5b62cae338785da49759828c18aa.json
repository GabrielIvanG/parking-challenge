{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROGRAMACION\\\\JS\\\\GitHub Dest Reposito\\\\parking-challenge\\\\client\\\\src\\\\Components\\\\ParkingSpots\\\\ParkingSpots.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './ParkingSpots.css';\nimport findIcon from '../../icons/findIcon.png';\nimport Spots from './Spots/Spots.js';\nimport { getBusiness, cleanError, getCoords } from '../../redux/actions/actions.js';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { v4 as unicID } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ParkingSpots() {\n  _s();\n\n  const [location, setLocation] = useState('');\n  const dispatch = useDispatch();\n\n  const submit = e => {\n    e.preventDefault();\n\n    if (location) {\n      dispatch(getBusiness(location));\n    } else {\n      alert('Insert a valid location');\n    }\n  };\n\n  const results = useSelector(state => state.business);\n  const error = useSelector(state => state.error);\n  if (parkings.address) dispatch(getCoords(parkings.address));\n  const result = useSelector(state => state.coords);\n\n  if (result) {\n    console.log(result);\n  }\n\n  if (error.message) {\n    alert('city not found');\n    dispatch(cleanError());\n    document.getElementById('locationInput').value = '';\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      className: \"ParkingSpots\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"locationInput\",\n        placeholder: \"address,neighborhood,city,state or zip...\",\n        onChange: e => {\n          setLocation(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: findIcon,\n          id: \"findButton\",\n          alt: \"findIcon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"parkingContainer\",\n      children: results.map(business => /*#__PURE__*/_jsxDEV(Spots, {\n        parkings: business\n      }, unicID(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 35\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ParkingSpots, \"98k37vDK8UczAsBbxTyNyIiEdLE=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ParkingSpots;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParkingSpots\");","map":{"version":3,"sources":["E:/PROGRAMACION/JS/GitHub Dest Reposito/parking-challenge/client/src/Components/ParkingSpots/ParkingSpots.js"],"names":["React","useState","findIcon","Spots","getBusiness","cleanError","getCoords","useDispatch","useSelector","v4","unicID","ParkingSpots","location","setLocation","dispatch","submit","e","preventDefault","alert","results","state","business","error","parkings","address","result","coords","console","log","message","document","getElementById","value","target","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAO,oBAAP;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAAQC,WAAR,EAAsBC,UAAtB,EAAmCC,SAAnC,QAAmD,gCAAnD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B;;;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAErC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AAGA,QAAMa,QAAQ,GAAGP,WAAW,EAA5B;;AAIA,QAAMQ,MAAM,GAAIC,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAIL,QAAJ,EAAa;AACXE,MAAAA,QAAQ,CAACV,WAAW,CAACQ,QAAD,CAAZ,CAAR;AACD,KAFD,MAEM;AACJM,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACD;AAEF,GATD;;AAWA,QAAMC,OAAO,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAA3B;AACA,QAAMC,KAAK,GAAGd,WAAW,CAAEY,KAAK,IAAIA,KAAK,CAACE,KAAjB,CAAzB;AACA,MAAIC,QAAQ,CAACC,OAAb,EAAsBV,QAAQ,CAACR,SAAS,CAACiB,QAAQ,CAACC,OAAV,CAAV,CAAR;AAEtB,QAAMC,MAAM,GAAGjB,WAAW,CAAEY,KAAK,IAAIA,KAAK,CAACM,MAAjB,CAA1B;;AACA,MAAID,MAAJ,EAAW;AACPE,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACH;;AAED,MAAIH,KAAK,CAACO,OAAV,EAAmB;AACjBX,IAAAA,KAAK,CAAC,gBAAD,CAAL;AACAJ,IAAAA,QAAQ,CAACT,UAAU,EAAX,CAAR;AACAyB,IAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAzC,GAAgD,EAAhD;AACD;;AAID,sBACI;AAAA,4BACA;AAAM,MAAA,QAAQ,EAAEjB,MAAhB;AAAwB,MAAA,SAAS,EAAC,cAAlC;AAAA,8BACI;AAAO,QAAA,EAAE,EAAC,eAAV;AAA0B,QAAA,WAAW,EAAC,2CAAtC;AACM,QAAA,QAAQ,EAAGC,CAAD,IAAM;AAACH,UAAAA,WAAW,CAACG,CAAC,CAACiB,MAAF,CAASD,KAAV,CAAX;AAA4B;AADnD;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,+BACE;AAAK,UAAA,GAAG,EAAE9B,QAAV;AAAoB,UAAA,EAAE,EAAC,YAAvB;AAAoC,UAAA,GAAG,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eASA;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBACGiB,OAAO,CAACe,GAAR,CAAab,QAAQ,iBAAI,QAAC,KAAD;AAAsB,QAAA,QAAQ,EAAEA;AAAhC,SAAYX,MAAM,EAAlB;AAAA;AAAA;AAAA;AAAA,cAAzB;AADH;AAAA;AAAA;AAAA;AAAA,YATA;AAAA,kBADJ;AAeD;;GApDuBC,Y;UAKLJ,W,EAeDC,W,EACFA,W,EAGCA,W;;;KAxBOG,Y","sourcesContent":["import React, {useState } from 'react';\r\nimport './ParkingSpots.css';\r\nimport findIcon from '../../icons/findIcon.png';\r\nimport Spots from './Spots/Spots.js';\r\nimport {getBusiness , cleanError , getCoords} from '../../redux/actions/actions.js';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {v4 as unicID} from 'uuid';\r\n\r\nexport default function ParkingSpots() {\r\n\r\n  const [location, setLocation] = useState('')\r\n\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  \r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (location){\r\n      dispatch(getBusiness(location))\r\n    }else {\r\n      alert('Insert a valid location')\r\n    }\r\n    \r\n  }\r\n\r\n  const results = useSelector((state) => state.business)\r\n  const error = useSelector( state => state.error)\r\n  if (parkings.address) dispatch(getCoords(parkings.address))\r\n\r\n  const result = useSelector( state => state.coords)\r\n  if (result){\r\n      console.log(result)\r\n  } \r\n\r\n  if (error.message) {\r\n    alert('city not found')\r\n    dispatch(cleanError())\r\n    document.getElementById('locationInput').value= ''\r\n  }\r\n\r\n\r\n\r\n  return (\r\n      <>\r\n      <form onSubmit={submit} className='ParkingSpots' >\r\n          <input id='locationInput' placeholder='address,neighborhood,city,state or zip...'\r\n                onChange={(e)=> {setLocation(e.target.value)}}\r\n          />\r\n          <button>\r\n            <img src={findIcon} id='findButton' alt='findIcon' />\r\n          </button>\r\n      </form>\r\n      <div className='parkingContainer'>\r\n        {results.map( business => <Spots key={unicID()} parkings={business} />)}\r\n      </div>\r\n      </>\r\n  )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}